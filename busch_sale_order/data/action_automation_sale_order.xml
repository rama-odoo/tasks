<?xml version="1.0" encoding="UTF-8" ?>
<odoo>
    <!--create and update on field action to work in sale order-->
   <!--  <record id="action_confirmed_delivery_date_sale_order" model="base.automation">
        <field name="name">Confirmed Delivery Date</field>
        <field name="model_id" ref="sale.model_sale_order_line"/>
        <field name="trigger">on_create_or_write</field>
        <field name="trigger_field_ids" eval="[(4, ref('studio_customization.new_date_sales_order_8cf86478-3562-42dd-b177-69648c9798bb'))]"/>
        <field name="state">code</field>
        <field name="code">
vals_list = []
for line in record:
  vals = {
    'x_internal_reference' : line.product_id.default_code,
    'x_sequence' : line.x_sale_order_line_sequence,
    'x_confirmed_delivery_date' : line.x_studio_delivery_date,
    'x_sale_line_id': line.id,
    'x_order_id': line.order_id.id,
  }
  vals_list.append(vals)
order_line_ids = env['x_order_lines'].create(vals_list)
        </field>
    </record> -->

   <!--  <record id="action_sys_date" model="base.automation">
        <field name="name">Change date</field>
        <field name="model_id" ref="sale.model_sale_order"/>
        <field name="trigger">on_create_or_write</field>
        <field name="state">code</field>
        <field name="code">
order_lines = env['x_order_lines'].search([])
order_lines['x_sys_date'] = datetime.date.today()
        </field>
    </record>
    <record id="action_user_id" model="base.automation">
        <field name="name">User</field>
        <field name="model_id" ref="sale.model_sale_order"/>
        <field name="trigger">on_create_or_write</field>
        <field name="state">code</field>
        <field name="code">
user = env['x_order_lines'].search([])
user['x_user_id'] = record.user_id.name
        </field>
    </record> -->
</odoo>